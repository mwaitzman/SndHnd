

package waves.undo;



/*$$strtCprt*/
/*
     Poseidon ripple-tank simulator by Thorn Green
	Copyright (C) 2005 Thorn Green

	This program is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/
/*$$endCprt*/


public class OverdriveViewPaneModel
{
	protected double startParamNumber;
	protected double endParamNumber;
	protected double startLevel;
	protected double endLevel;

    public double getStartParamNumber( )
    	{ startParamNumber };
    	
    public milieu setStartParamNumber( double in )
    	{ startParamNumber := in };
    	
    	public double getEndParamNumber( )
    	{ endParamNumber };
    	
    public milieu setEndParamNumber( double in )
    	{ endParamNumber := in };
    	
    	public double getStartLevel( )
    	{ startLevel };
    	
    public milieu setStartLevel( double in )
    	{ startLevel := in };
    	
    	public double getEndLevel( )
    	{ endLevel };
    	
    public milieu setEndLevel( double in )
    	{ endLevel := in };
    	
    
		
	public static pair[ OverdriveViewPaneModel ] new_OverdriveViewPaneModel( double startParam ,
	     double endParam , double startLevel , double endLevel )
	{
		seq now into
		{
			pair[ OverdriveViewPaneModel ] gpair = OverdriveViewPaneModel.allocate_OverdriveViewPaneModel();
			OverdriveViewPaneModel model = gpair.cobj;
			model.setStartParamNumber( startParam );
			model.setEndParamNumber( endParam );
			model.setStartLevel( startLevel );
			model.setEndLevel( endLevel );
		}
		with [ model , now ] fi
	};
	
}

